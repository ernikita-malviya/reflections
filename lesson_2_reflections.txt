What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository a hidden directory call .git is created. 
This directory contains all the information that allows the version control 
to work. This data has to be stored somewhere so it makes sense to put it 
in a subdirectory of the topmost directory of your project. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area allows you to select which files are to be committed. If you make changes to your code and you later realize that they are really logically seperate changes you can commit the changes in multiple commits by using the staging area.

How can you use the staging area to make sure you have one commit per logical change?

Using the git add command allows you to add the files seperately and even choose which lines are to be committed.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Use branches to try out tentative features while keeping a working master branch. Then later they can be merged with the master branch. This makes sure that unstable code is never committed to the main code base, and it gives you the chance to clean up your featureâ€™s history before merging it into the main branch.

How do the diagrams help you visualize the branch structure?

The diagrams show each commit and it's parent. It is also easy to see the 
seperation of the branches because they have arrows to their parents which
show the beginning of a fork. It is essentially a tree diagram and you can
easily distinguish branches of a tree because of the spacial differences.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result of merging two branches together is a combination of the changes
made in both branches. The diagram shows that the new commit takes both of the
branch tips as it's parents and the new commit becomes the head and the tip of
master. This makes sense to display it as two arrows pointing to both parents
because code was taken a merged from both tips.


